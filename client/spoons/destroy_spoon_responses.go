// Code generated by go-swagger; DO NOT EDIT.

package spoons

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/xbcsmith/spoon/models"
)

// DestroySpoonReader is a Reader for the DestroySpoon structure.
type DestroySpoonReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DestroySpoonReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 204:
		result := NewDestroySpoonNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewDestroySpoonUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewDestroySpoonNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewDestroySpoonDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewDestroySpoonNoContent creates a DestroySpoonNoContent with default headers values
func NewDestroySpoonNoContent() *DestroySpoonNoContent {
	return &DestroySpoonNoContent{}
}

/*DestroySpoonNoContent handles this case with default header values.

Deleted
*/
type DestroySpoonNoContent struct {
}

func (o *DestroySpoonNoContent) Error() string {
	return fmt.Sprintf("[DELETE /v1/spoons/{id}][%d] destroySpoonNoContent ", 204)
}

func (o *DestroySpoonNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDestroySpoonUnauthorized creates a DestroySpoonUnauthorized with default headers values
func NewDestroySpoonUnauthorized() *DestroySpoonUnauthorized {
	return &DestroySpoonUnauthorized{}
}

/*DestroySpoonUnauthorized handles this case with default header values.

unauthorized
*/
type DestroySpoonUnauthorized struct {
	Payload *models.Error
}

func (o *DestroySpoonUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /v1/spoons/{id}][%d] destroySpoonUnauthorized  %+v", 401, o.Payload)
}

func (o *DestroySpoonUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDestroySpoonNotFound creates a DestroySpoonNotFound with default headers values
func NewDestroySpoonNotFound() *DestroySpoonNotFound {
	return &DestroySpoonNotFound{}
}

/*DestroySpoonNotFound handles this case with default header values.

resource not found
*/
type DestroySpoonNotFound struct {
	Payload *models.Error
}

func (o *DestroySpoonNotFound) Error() string {
	return fmt.Sprintf("[DELETE /v1/spoons/{id}][%d] destroySpoonNotFound  %+v", 404, o.Payload)
}

func (o *DestroySpoonNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDestroySpoonDefault creates a DestroySpoonDefault with default headers values
func NewDestroySpoonDefault(code int) *DestroySpoonDefault {
	return &DestroySpoonDefault{
		_statusCode: code,
	}
}

/*DestroySpoonDefault handles this case with default header values.

error
*/
type DestroySpoonDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the destroy spoon default response
func (o *DestroySpoonDefault) Code() int {
	return o._statusCode
}

func (o *DestroySpoonDefault) Error() string {
	return fmt.Sprintf("[DELETE /v1/spoons/{id}][%d] destroy_spoon default  %+v", o._statusCode, o.Payload)
}

func (o *DestroySpoonDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
